/* 
 * WebAPI - Area Management
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: management
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ACUtils.AXRepository.ArxivarNextManagement.Client.SwaggerDateConverter;

namespace ACUtils.AXRepository.ArxivarNextManagement.Model
{
    /// <summary>
    /// Class of ArxCe Business unit
    /// </summary>
    [DataContract]
    public partial class ArxCeBusinessUnitDTO :  IEquatable<ArxCeBusinessUnitDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ArxCeBusinessUnitDTO" /> class.
        /// </summary>
        /// <param name="id">Identifier.</param>
        /// <param name="name">Name.</param>
        /// <param name="description">Description.</param>
        /// <param name="businessName">Business name.</param>
        /// <param name="vatCode">Vat code.</param>
        /// <param name="fiscalCode">Fiscal code.</param>
        /// <param name="pec">Pec.</param>
        /// <param name="businessRegister">BusinessRegister.</param>
        /// <param name="rea">REA.</param>
        /// <param name="address">Address.</param>
        /// <param name="houseNumber">House number.</param>
        /// <param name="city">City.</param>
        /// <param name="email">E-mail.</param>
        /// <param name="phone">Phone number.</param>
        /// <param name="mobilePhone">Mobile phone.</param>
        /// <param name="fax">Fax.</param>
        /// <param name="legalAddress">Legal address.</param>
        /// <param name="legalHouseNumber">Legal House number.</param>
        /// <param name="legalCity">Legal city.</param>
        /// <param name="legalEmail">Legal e-mail.</param>
        /// <param name="legalPhone">Legal phone number.</param>
        /// <param name="legalMobilePhone">Legal mobile phone.</param>
        /// <param name="legalFax">Legal fax.</param>
        /// <param name="metadata">Metadata.</param>
        public ArxCeBusinessUnitDTO(string id = default(string), string name = default(string), string description = default(string), string businessName = default(string), string vatCode = default(string), string fiscalCode = default(string), string pec = default(string), string businessRegister = default(string), string rea = default(string), string address = default(string), string houseNumber = default(string), ArxCeCity city = default(ArxCeCity), string email = default(string), string phone = default(string), string mobilePhone = default(string), string fax = default(string), string legalAddress = default(string), string legalHouseNumber = default(string), ArxCeCity legalCity = default(ArxCeCity), string legalEmail = default(string), string legalPhone = default(string), string legalMobilePhone = default(string), string legalFax = default(string), List<ArxCeMetadataDTO> metadata = default(List<ArxCeMetadataDTO>))
        {
            this.Id = id;
            this.Name = name;
            this.Description = description;
            this.BusinessName = businessName;
            this.VatCode = vatCode;
            this.FiscalCode = fiscalCode;
            this.Pec = pec;
            this.BusinessRegister = businessRegister;
            this.Rea = rea;
            this.Address = address;
            this.HouseNumber = houseNumber;
            this.City = city;
            this.Email = email;
            this.Phone = phone;
            this.MobilePhone = mobilePhone;
            this.Fax = fax;
            this.LegalAddress = legalAddress;
            this.LegalHouseNumber = legalHouseNumber;
            this.LegalCity = legalCity;
            this.LegalEmail = legalEmail;
            this.LegalPhone = legalPhone;
            this.LegalMobilePhone = legalMobilePhone;
            this.LegalFax = legalFax;
            this.Metadata = metadata;
        }
        
        /// <summary>
        /// Identifier
        /// </summary>
        /// <value>Identifier</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Name
        /// </summary>
        /// <value>Name</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Description
        /// </summary>
        /// <value>Description</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Business name
        /// </summary>
        /// <value>Business name</value>
        [DataMember(Name="businessName", EmitDefaultValue=false)]
        public string BusinessName { get; set; }

        /// <summary>
        /// Vat code
        /// </summary>
        /// <value>Vat code</value>
        [DataMember(Name="vatCode", EmitDefaultValue=false)]
        public string VatCode { get; set; }

        /// <summary>
        /// Fiscal code
        /// </summary>
        /// <value>Fiscal code</value>
        [DataMember(Name="fiscalCode", EmitDefaultValue=false)]
        public string FiscalCode { get; set; }

        /// <summary>
        /// Pec
        /// </summary>
        /// <value>Pec</value>
        [DataMember(Name="pec", EmitDefaultValue=false)]
        public string Pec { get; set; }

        /// <summary>
        /// BusinessRegister
        /// </summary>
        /// <value>BusinessRegister</value>
        [DataMember(Name="businessRegister", EmitDefaultValue=false)]
        public string BusinessRegister { get; set; }

        /// <summary>
        /// REA
        /// </summary>
        /// <value>REA</value>
        [DataMember(Name="rea", EmitDefaultValue=false)]
        public string Rea { get; set; }

        /// <summary>
        /// Address
        /// </summary>
        /// <value>Address</value>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// House number
        /// </summary>
        /// <value>House number</value>
        [DataMember(Name="houseNumber", EmitDefaultValue=false)]
        public string HouseNumber { get; set; }

        /// <summary>
        /// City
        /// </summary>
        /// <value>City</value>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public ArxCeCity City { get; set; }

        /// <summary>
        /// E-mail
        /// </summary>
        /// <value>E-mail</value>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Phone number
        /// </summary>
        /// <value>Phone number</value>
        [DataMember(Name="phone", EmitDefaultValue=false)]
        public string Phone { get; set; }

        /// <summary>
        /// Mobile phone
        /// </summary>
        /// <value>Mobile phone</value>
        [DataMember(Name="mobilePhone", EmitDefaultValue=false)]
        public string MobilePhone { get; set; }

        /// <summary>
        /// Fax
        /// </summary>
        /// <value>Fax</value>
        [DataMember(Name="fax", EmitDefaultValue=false)]
        public string Fax { get; set; }

        /// <summary>
        /// Legal address
        /// </summary>
        /// <value>Legal address</value>
        [DataMember(Name="legalAddress", EmitDefaultValue=false)]
        public string LegalAddress { get; set; }

        /// <summary>
        /// Legal House number
        /// </summary>
        /// <value>Legal House number</value>
        [DataMember(Name="legalHouseNumber", EmitDefaultValue=false)]
        public string LegalHouseNumber { get; set; }

        /// <summary>
        /// Legal city
        /// </summary>
        /// <value>Legal city</value>
        [DataMember(Name="legalCity", EmitDefaultValue=false)]
        public ArxCeCity LegalCity { get; set; }

        /// <summary>
        /// Legal e-mail
        /// </summary>
        /// <value>Legal e-mail</value>
        [DataMember(Name="legalEmail", EmitDefaultValue=false)]
        public string LegalEmail { get; set; }

        /// <summary>
        /// Legal phone number
        /// </summary>
        /// <value>Legal phone number</value>
        [DataMember(Name="legalPhone", EmitDefaultValue=false)]
        public string LegalPhone { get; set; }

        /// <summary>
        /// Legal mobile phone
        /// </summary>
        /// <value>Legal mobile phone</value>
        [DataMember(Name="legalMobilePhone", EmitDefaultValue=false)]
        public string LegalMobilePhone { get; set; }

        /// <summary>
        /// Legal fax
        /// </summary>
        /// <value>Legal fax</value>
        [DataMember(Name="legalFax", EmitDefaultValue=false)]
        public string LegalFax { get; set; }

        /// <summary>
        /// Metadata
        /// </summary>
        /// <value>Metadata</value>
        [DataMember(Name="metadata", EmitDefaultValue=false)]
        public List<ArxCeMetadataDTO> Metadata { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ArxCeBusinessUnitDTO {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  BusinessName: ").Append(BusinessName).Append("\n");
            sb.Append("  VatCode: ").Append(VatCode).Append("\n");
            sb.Append("  FiscalCode: ").Append(FiscalCode).Append("\n");
            sb.Append("  Pec: ").Append(Pec).Append("\n");
            sb.Append("  BusinessRegister: ").Append(BusinessRegister).Append("\n");
            sb.Append("  Rea: ").Append(Rea).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  HouseNumber: ").Append(HouseNumber).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  LegalAddress: ").Append(LegalAddress).Append("\n");
            sb.Append("  LegalHouseNumber: ").Append(LegalHouseNumber).Append("\n");
            sb.Append("  LegalCity: ").Append(LegalCity).Append("\n");
            sb.Append("  LegalEmail: ").Append(LegalEmail).Append("\n");
            sb.Append("  LegalPhone: ").Append(LegalPhone).Append("\n");
            sb.Append("  LegalMobilePhone: ").Append(LegalMobilePhone).Append("\n");
            sb.Append("  LegalFax: ").Append(LegalFax).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ArxCeBusinessUnitDTO);
        }

        /// <summary>
        /// Returns true if ArxCeBusinessUnitDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of ArxCeBusinessUnitDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ArxCeBusinessUnitDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.BusinessName == input.BusinessName ||
                    (this.BusinessName != null &&
                    this.BusinessName.Equals(input.BusinessName))
                ) && 
                (
                    this.VatCode == input.VatCode ||
                    (this.VatCode != null &&
                    this.VatCode.Equals(input.VatCode))
                ) && 
                (
                    this.FiscalCode == input.FiscalCode ||
                    (this.FiscalCode != null &&
                    this.FiscalCode.Equals(input.FiscalCode))
                ) && 
                (
                    this.Pec == input.Pec ||
                    (this.Pec != null &&
                    this.Pec.Equals(input.Pec))
                ) && 
                (
                    this.BusinessRegister == input.BusinessRegister ||
                    (this.BusinessRegister != null &&
                    this.BusinessRegister.Equals(input.BusinessRegister))
                ) && 
                (
                    this.Rea == input.Rea ||
                    (this.Rea != null &&
                    this.Rea.Equals(input.Rea))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.HouseNumber == input.HouseNumber ||
                    (this.HouseNumber != null &&
                    this.HouseNumber.Equals(input.HouseNumber))
                ) && 
                (
                    this.City == input.City ||
                    (this.City != null &&
                    this.City.Equals(input.City))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.MobilePhone == input.MobilePhone ||
                    (this.MobilePhone != null &&
                    this.MobilePhone.Equals(input.MobilePhone))
                ) && 
                (
                    this.Fax == input.Fax ||
                    (this.Fax != null &&
                    this.Fax.Equals(input.Fax))
                ) && 
                (
                    this.LegalAddress == input.LegalAddress ||
                    (this.LegalAddress != null &&
                    this.LegalAddress.Equals(input.LegalAddress))
                ) && 
                (
                    this.LegalHouseNumber == input.LegalHouseNumber ||
                    (this.LegalHouseNumber != null &&
                    this.LegalHouseNumber.Equals(input.LegalHouseNumber))
                ) && 
                (
                    this.LegalCity == input.LegalCity ||
                    (this.LegalCity != null &&
                    this.LegalCity.Equals(input.LegalCity))
                ) && 
                (
                    this.LegalEmail == input.LegalEmail ||
                    (this.LegalEmail != null &&
                    this.LegalEmail.Equals(input.LegalEmail))
                ) && 
                (
                    this.LegalPhone == input.LegalPhone ||
                    (this.LegalPhone != null &&
                    this.LegalPhone.Equals(input.LegalPhone))
                ) && 
                (
                    this.LegalMobilePhone == input.LegalMobilePhone ||
                    (this.LegalMobilePhone != null &&
                    this.LegalMobilePhone.Equals(input.LegalMobilePhone))
                ) && 
                (
                    this.LegalFax == input.LegalFax ||
                    (this.LegalFax != null &&
                    this.LegalFax.Equals(input.LegalFax))
                ) && 
                (
                    this.Metadata == input.Metadata ||
                    this.Metadata != null &&
                    this.Metadata.SequenceEqual(input.Metadata)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.BusinessName != null)
                    hashCode = hashCode * 59 + this.BusinessName.GetHashCode();
                if (this.VatCode != null)
                    hashCode = hashCode * 59 + this.VatCode.GetHashCode();
                if (this.FiscalCode != null)
                    hashCode = hashCode * 59 + this.FiscalCode.GetHashCode();
                if (this.Pec != null)
                    hashCode = hashCode * 59 + this.Pec.GetHashCode();
                if (this.BusinessRegister != null)
                    hashCode = hashCode * 59 + this.BusinessRegister.GetHashCode();
                if (this.Rea != null)
                    hashCode = hashCode * 59 + this.Rea.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.HouseNumber != null)
                    hashCode = hashCode * 59 + this.HouseNumber.GetHashCode();
                if (this.City != null)
                    hashCode = hashCode * 59 + this.City.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Phone != null)
                    hashCode = hashCode * 59 + this.Phone.GetHashCode();
                if (this.MobilePhone != null)
                    hashCode = hashCode * 59 + this.MobilePhone.GetHashCode();
                if (this.Fax != null)
                    hashCode = hashCode * 59 + this.Fax.GetHashCode();
                if (this.LegalAddress != null)
                    hashCode = hashCode * 59 + this.LegalAddress.GetHashCode();
                if (this.LegalHouseNumber != null)
                    hashCode = hashCode * 59 + this.LegalHouseNumber.GetHashCode();
                if (this.LegalCity != null)
                    hashCode = hashCode * 59 + this.LegalCity.GetHashCode();
                if (this.LegalEmail != null)
                    hashCode = hashCode * 59 + this.LegalEmail.GetHashCode();
                if (this.LegalPhone != null)
                    hashCode = hashCode * 59 + this.LegalPhone.GetHashCode();
                if (this.LegalMobilePhone != null)
                    hashCode = hashCode * 59 + this.LegalMobilePhone.GetHashCode();
                if (this.LegalFax != null)
                    hashCode = hashCode * 59 + this.LegalFax.GetHashCode();
                if (this.Metadata != null)
                    hashCode = hashCode * 59 + this.Metadata.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
