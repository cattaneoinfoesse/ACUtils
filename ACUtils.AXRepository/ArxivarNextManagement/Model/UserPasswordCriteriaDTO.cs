/* 
 * WebAPI - Area Management
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: management
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ACUtils.AXRepository.ArxivarNextManagement.Client.SwaggerDateConverter;

namespace ACUtils.AXRepository.ArxivarNextManagement.Model
{
    /// <summary>
    /// Class of the user password criteria
    /// </summary>
    [DataContract]
    public partial class UserPasswordCriteriaDTO :  IEquatable<UserPasswordCriteriaDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserPasswordCriteriaDTO" /> class.
        /// </summary>
        /// <param name="recoveryCriteria">Recovery.</param>
        /// <param name="manageCriteria">Management password change.</param>
        /// <param name="advancedCriteria">Advanced.</param>
        public UserPasswordCriteriaDTO(UserPasswordRecoveryCriteriaDTO recoveryCriteria = default(UserPasswordRecoveryCriteriaDTO), UserPasswordManageCriteriaDTO manageCriteria = default(UserPasswordManageCriteriaDTO), UserPasswordAdvancedCriteriaDTO advancedCriteria = default(UserPasswordAdvancedCriteriaDTO))
        {
            this.RecoveryCriteria = recoveryCriteria;
            this.ManageCriteria = manageCriteria;
            this.AdvancedCriteria = advancedCriteria;
        }
        
        /// <summary>
        /// Recovery
        /// </summary>
        /// <value>Recovery</value>
        [DataMember(Name="recoveryCriteria", EmitDefaultValue=false)]
        public UserPasswordRecoveryCriteriaDTO RecoveryCriteria { get; set; }

        /// <summary>
        /// Management password change
        /// </summary>
        /// <value>Management password change</value>
        [DataMember(Name="manageCriteria", EmitDefaultValue=false)]
        public UserPasswordManageCriteriaDTO ManageCriteria { get; set; }

        /// <summary>
        /// Advanced
        /// </summary>
        /// <value>Advanced</value>
        [DataMember(Name="advancedCriteria", EmitDefaultValue=false)]
        public UserPasswordAdvancedCriteriaDTO AdvancedCriteria { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserPasswordCriteriaDTO {\n");
            sb.Append("  RecoveryCriteria: ").Append(RecoveryCriteria).Append("\n");
            sb.Append("  ManageCriteria: ").Append(ManageCriteria).Append("\n");
            sb.Append("  AdvancedCriteria: ").Append(AdvancedCriteria).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserPasswordCriteriaDTO);
        }

        /// <summary>
        /// Returns true if UserPasswordCriteriaDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of UserPasswordCriteriaDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserPasswordCriteriaDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RecoveryCriteria == input.RecoveryCriteria ||
                    (this.RecoveryCriteria != null &&
                    this.RecoveryCriteria.Equals(input.RecoveryCriteria))
                ) && 
                (
                    this.ManageCriteria == input.ManageCriteria ||
                    (this.ManageCriteria != null &&
                    this.ManageCriteria.Equals(input.ManageCriteria))
                ) && 
                (
                    this.AdvancedCriteria == input.AdvancedCriteria ||
                    (this.AdvancedCriteria != null &&
                    this.AdvancedCriteria.Equals(input.AdvancedCriteria))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RecoveryCriteria != null)
                    hashCode = hashCode * 59 + this.RecoveryCriteria.GetHashCode();
                if (this.ManageCriteria != null)
                    hashCode = hashCode * 59 + this.ManageCriteria.GetHashCode();
                if (this.AdvancedCriteria != null)
                    hashCode = hashCode * 59 + this.AdvancedCriteria.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
