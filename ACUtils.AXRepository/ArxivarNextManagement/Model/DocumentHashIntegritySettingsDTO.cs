/* 
 * WebAPI - Area Management
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: management
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ACUtils.AXRepository.ArxivarNextManagement.Client.SwaggerDateConverter;

namespace ACUtils.AXRepository.ArxivarNextManagement.Model
{
    /// <summary>
    /// DocumentHashIntegritySettingsDTO
    /// </summary>
    [DataContract]
    public partial class DocumentHashIntegritySettingsDTO :  IEquatable<DocumentHashIntegritySettingsDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentHashIntegritySettingsDTO" /> class.
        /// </summary>
        /// <param name="hashIntegrity">Document hash integrity.</param>
        /// <param name="verifyFileArchive">Computes further document accesibility during profile insert and update.</param>
        public DocumentHashIntegritySettingsDTO(bool? hashIntegrity = default(bool?), bool? verifyFileArchive = default(bool?))
        {
            this.HashIntegrity = hashIntegrity;
            this.VerifyFileArchive = verifyFileArchive;
        }
        
        /// <summary>
        /// Document hash integrity
        /// </summary>
        /// <value>Document hash integrity</value>
        [DataMember(Name="hashIntegrity", EmitDefaultValue=false)]
        public bool? HashIntegrity { get; set; }

        /// <summary>
        /// Computes further document accesibility during profile insert and update
        /// </summary>
        /// <value>Computes further document accesibility during profile insert and update</value>
        [DataMember(Name="verifyFileArchive", EmitDefaultValue=false)]
        public bool? VerifyFileArchive { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DocumentHashIntegritySettingsDTO {\n");
            sb.Append("  HashIntegrity: ").Append(HashIntegrity).Append("\n");
            sb.Append("  VerifyFileArchive: ").Append(VerifyFileArchive).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DocumentHashIntegritySettingsDTO);
        }

        /// <summary>
        /// Returns true if DocumentHashIntegritySettingsDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of DocumentHashIntegritySettingsDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DocumentHashIntegritySettingsDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.HashIntegrity == input.HashIntegrity ||
                    (this.HashIntegrity != null &&
                    this.HashIntegrity.Equals(input.HashIntegrity))
                ) && 
                (
                    this.VerifyFileArchive == input.VerifyFileArchive ||
                    (this.VerifyFileArchive != null &&
                    this.VerifyFileArchive.Equals(input.VerifyFileArchive))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.HashIntegrity != null)
                    hashCode = hashCode * 59 + this.HashIntegrity.GetHashCode();
                if (this.VerifyFileArchive != null)
                    hashCode = hashCode * 59 + this.VerifyFileArchive.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
